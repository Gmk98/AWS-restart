
D'après Herbert Mayer, « un langage utile doit comprendre des tableaux, des pointeurs et un mécanisme générique pour construire des structures de données. » Suivant ces critères, les langages des scripts shell ne sont pas « utiles ». Peut-être que si.
Quand ne pas utiliser les scripts shell
• pour des tâches demandant beaucoup de ressources et particulièrement lorsque la rapidité est un facteur (tri, hachage, etc.) ;
• pour des procédures impliquant des opérations mathématiques nombreuses et complexes, spécialement pour de l'arithmétique à virgule flottante, des calculs à précision arbitraire ou des nombres complexes (optez plutôt pour le C++ ou le FORTRAN dans ce cas) ;
• pour une portabilité inter-plateformes (utilisez le C ou Java à la place) ;
• pour des applications complexes où une programmation structurée est nécessaire (typage de variables, prototypage de fonc- tions, etc.) ;
• pour des applications critiques sur lesquelles vous misez votre avenir ou celui de la société ;
• pour des situations où la sécurité est importante, où vous avez besoin de garantir l'intégrité de votre système et de vous proté- ger contre les intrusions et le vandalisme ;
• pour des projets consistant en de nombreux composants avec des dépendances inter-verrouillées ;
• lorsque des opérations importantes sur des fichiers sont requises (Bash est limité à un accès fichier en série, ligne par ligne, ce qui est particulièrement maladroit et inefficace) ;
• si le support natif des tableaux multidimensionnels est nécessaire ;
• si vous avez besoin de structures de données, telles que des listes chaînées ou des arbres ;
• si vous avez besoin de générer ou de manipuler des graphiques ou une interface utilisateur (GUI) ;
• lorsqu'un accès direct au matériel est nécessaire ;
• lorsque vous avez besoin d'accéder à un port, à un socket d'entrée/sortie ;
• si vous avez besoin d'utiliser des bibliothèques ou une interface propriétaire ;
• pour des applications propriétaires, à sources fermées (les sources des shells sont forcément visibles par tout le monde).
